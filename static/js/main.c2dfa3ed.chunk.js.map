{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["About","props","console","log","Movie","id","year","title","summary","poster","genres","to","pathname","state","className","src","alt","map","genre","index","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","Navigation","fromNaviagtion","Detail","location","history","undefined","push","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAOeA,MALf,SAAeC,GAEb,OADAC,QAAQC,IAAIF,GACL,uF,8EC4CMG,MA3Cf,YAA8D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjD,OACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,UAAD,OAAYP,GACpBQ,MAAO,CACLP,OACAC,QACAC,UACAC,SACAC,WARN,SAYE,sBAAKI,UAAU,QAAf,UACE,qBAAKC,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACrC,sBAAKO,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BP,IAC9B,oBAAIO,UAAU,cAAd,SAA6BR,IAC7B,oBAAIQ,UAAU,SAAd,SACGJ,EAAOO,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBL,UAAU,eAA1B,SACGI,GADMC,QAKb,mBAAGL,UAAU,iBAAb,SAA+BN,aC0C1BY,G,kNAjEbP,MAAQ,CACNQ,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,4DANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAOZ,EAAKM,SAAS,CAAEN,OAAQA,EAAQD,WAAW,IAVjC,2C,uDAaZ,WACEQ,KAAKN,c,oBASP,WAEE,MAA8BM,KAAKhB,MAA3BQ,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAEnB,OACE,yBAASR,UAAU,YAAnB,SACGO,EACC,qBAAKP,UAAU,SAAf,SACE,sBAAMA,UAAU,cAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGQ,EAAOL,KACN,SACEa,GADF,OAME,aAHA,CAGC,EAAD,CAEEzB,GAAIyB,EAAMzB,GACVC,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAMC,mBACdrB,OAAQoB,EAAMpB,QANToB,EAAMzB,e,GAjDV2B,IAAMC,Y,MCcVC,MAjBf,WACE,OACE,gCACE,cAAC,IAAD,CAAMvB,GAAG,IAAT,kBACA,cAAC,IAAD,CACEA,GAAI,CACFC,SAAU,SACVC,MAAO,CACLsB,gBAAgB,IAJtB,uBCkBSC,E,uKAlBb,WACElC,QAAQC,IAAI0B,KAAK5B,OACjB,MAA8B4B,KAAK5B,MAA3BoC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,QAClBpC,QAAQC,IAAIkC,QACWE,IAAnBF,EAASxB,OACXyB,EAAQE,KAAK,O,oBAGjB,WACE,IAAQH,EAAaR,KAAK5B,MAAlBoC,SAER,OAAIA,EAASxB,MACJ,+BAAOwB,EAASxB,MAAMN,QAEtB,S,GAfQyB,IAAMC,WC6BZQ,MA5Bf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWxB,IACxC,cAAC,IAAD,CAAOsB,KAAK,SAASE,UAAW5C,IAChC,cAAC,IAAD,CAAO0C,KAAK,aAAaE,UAAWR,QCV1CS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c2dfa3ed.chunk.js","sourcesContent":["import React from 'react';\n\nfunction About(props) {\n  console.log(props);\n  return <span>About this page: I built it becasue I love movies.</span>;\n}\n\nexport default About;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Movie.css';\nimport { Link } from 'react-router-dom';\n\nfunction Movie({ id, year, title, summary, poster, genres }) {\n  return (\n    <Link\n      to={{\n        pathname: `/movie/${id}`,\n        state: {\n          year,\n          title,\n          summary,\n          poster,\n          genres,\n        },\n      }}\n    >\n      <div className=\"movie\">\n        <img src={poster} alt={title} title={title}></img>\n        <div className=\"movie__data\">\n          <h3 className=\"movie__title\">{title}</h3>\n          <h5 className=\"movie__year\">{year}</h5>\n          <ul className=\"genres\">\n            {genres.map((genre, index) => (\n              <li key={index} className=\"genres_genre\">\n                {genre}\n              </li>\n            ))}\n          </ul>\n          <p className=\"movie__summary\">{summary}</p>\n        </div>\n      </div>\n    </Link>\n  );\n}\n\n//각 props가 어떤 타입을 필요로 하는지 지정\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;\n","// ./ means same directory\n//import PropTypes from \"prop-types\";\nimport React from 'react';\nimport axios from 'axios';\nimport Movie from '../components/Movie';\nimport './Home.css';\n\nclass Home extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      'https://yts-proxy.now.sh/list_movies.json?sort_by=rating'\n    );\n\n    //console.log(movies);\n    this.setState({ movies: movies, isLoading: false });\n  };\n\n  componentDidMount() {\n    this.getMovies();\n\n    /* setTimeout( () => {\n      this.setState({isLoading:false});\n    },6000);*/\n\n    //  console.log('did mount!');\n  }\n\n  render() {\n    // console.log('rendering!');\n    const { isLoading, movies } = this.state;\n    //？の意味　条件式 ? 式1 : 式2　　trueだった場合、式1をreturn, falseだった場合、式2をreturn.\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader_text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map(\n              (\n                movie //movie함수를 실행\n              ) => (\n                //Movie.js 파일의 Movie함수의 각 props에 정보를 부여.\n                //map함수는 모든 배열의 값에 Function을 실행하고 그것을 반환하는 함수이다.\n                //이 경우, movies state에 있는 배열을 가져와 Movie.js파일에 있는 각 Movie.prps에 저장하고 그것을 반환한다.\n                <Movie\n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                />\n              )\n            )}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navigation.css';\n\nfunction Navigation() {\n  return (\n    <div>\n      <Link to=\"/\">Home</Link>\n      <Link\n        to={{\n          pathname: '/about',\n          state: {\n            fromNaviagtion: true,\n          },\n        }}\n      >\n        About\n      </Link>\n    </div>\n  );\n}\nexport default Navigation;\n","import React from 'react';\n\n/*function Detail({ location }) {\n  console.log(location);\n  return <span>hello!</span>;\n}\n*/\nclass Detail extends React.Component {\n  componentDidMount() {\n    console.log(this.props);\n    const { location, history } = this.props; //Route에서 딸려온 기본값 props\n    console.log(location);\n    if (location.state === undefined) {\n      history.push('/');\n    }\n  }\n  render() {\n    const { location } = this.props;\n    //render가 componentDidMount보다 먼저 실행되기 때문에, if문을 사용하여 체크해줌\n    if (location.state) {\n      return <span>{location.state.title}</span>;\n    } else {\n      return null;\n    }\n  }\n}\nexport default Detail;\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport About from './routes/About';\nimport Home from './routes/Home';\nimport Navigation from './components/Navigation';\nimport Detail from './routes/Detail';\n\n//Route에는  기본값으로 딸려오는 props가 있다. 그리고, 해당 컴포넌트에서 그것을 사용할 수 있다.\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie/:id\" component={Detail} />\n    </HashRouter>\n  );\n\n  /*\n  return (\n    <HashRouter>\n      <Route path=\"/home\" exact={true}>\n        <h1>Home</h1>\n      </Route>\n      <Route path=\"/home/introduction\">\n        <h1>Introduction</h1>\n        </Route>\n      <Route path=\"/about\">\n        <h1>About</h1>\n      </Route>\n      \n    </HashRouter>\n  );\n  */\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}